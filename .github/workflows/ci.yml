name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - uses: mstachniuk/ci-skip@v1
      
      # Runs a set of commands using the runners shell
      - name: Build
        if: ${{ env.CI_SKIP == 'false' }}
        run: |
          echo "This step should not be executed when commit message contains [ci skip]"        
          sudo apt-get update 
          sudo apt-get install -y apt-utils \
          build-essential \
          cmake \
          libgtest-dev \
          libtbb-dev \
          libboost-all-dev \
          liblapack-dev \
          wget \
          unzip
          cd /home/runner/ && wget "https://virtonomyplatformdev.blob.core.windows.net/simulation/simbody_lib/simbody.zip?sv=2019-12-12&st=2021-08-03T14%3A03%3A58Z&se=2022-08-04T14%3A03%3A00Z&sr=b&sp=r&sig=j4pjSwzRMV3OzRtKeYUv62zutZ3Td3M8khRxd3lsEYs%3D"
          unzip "simbody.zip?sv=2019-12-12&st=2021-08-03T14:03:58Z&se=2022-08-04T14:03:00Z&sr=b&sp=r&sig=j4pjSwzRMV3OzRtKeYUv62zutZ3Td3M8khRxd3lsEYs="
          export TBB_HOME=/usr/lib/x86_64-linux-gnu
          export BOOST_HOME=/usr/lib/x86_64-linux-gnu
          cd /usr/src/gtest
          sudo cmake CMakeLists.txt
          sudo make -j$(nproc)
          cd /home/runner/work/SPHinXsys/SPHinXsys
          mkdir build
          cd build 
          cmake .. -DSIMBODY_HOME=/home/runner/simbody
          make -j$(nproc)

      - name: Test with the first try
        id: first-try
        if: ${{ env.CI_SKIP == 'false' }}
        run: |
          cd /home/runner/work/SPHinXsys/SPHinXsys
          cd build 
          ctest  --output-on-failure
        continue-on-error: true

      - name: Test with the second try for failed cases
        id: second-try
        if: ${{ env.CI_SKIP == 'false' && steps.first-try.outcome == 'failure' }} 
        run: |
          cd /home/runner/work/SPHinXsys/SPHinXsys
          cd build 
          ctest --rerun-failed --output-on-failure
        continue-on-error: true

      - name: Test with the third try for failed cases
        id: third-try
        if: ${{ env.CI_SKIP == 'false' && steps.second-try.outcome == 'failure' }} 
        run: |
          cd /home/runner/work/SPHinXsys/SPHinXsys
          cd build 
          ctest --rerun-failed --output-on-failure
        continue-on-error: true

      - name: Test with the fourth try for failed cases
        id: fourth-try
        if: ${{ env.CI_SKIP == 'false' && steps.third-try.outcome == 'failure' }} 
        run: |
          cd /home/runner/work/SPHinXsys/SPHinXsys
          cd build 
          ctest --rerun-failed --output-on-failure
        continue-on-error: true

      - name: Test with the last try for failed cases
        if: ${{ env.CI_SKIP == 'false' && steps.fourth-try.outcome == 'failure' }} 
        run: |
          cd /home/runner/work/SPHinXsys/SPHinXsys
          cd build 
          ctest --rerun-failed --output-on-failure

